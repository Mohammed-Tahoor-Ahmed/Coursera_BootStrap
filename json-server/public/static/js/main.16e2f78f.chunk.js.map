{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/AboutComponent.js","components/HomeComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","key","isLoading","errMess","active","Header","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","href","height","isOpen","navbar","outline","toggle","onSubmit","htmlFor","type","innerRef","input","check","color","Component","Footer","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","role","model","md","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","CommentForm","handleComment","postComment","dishId","rating","author","comment","RenderDish","in","transformProps","exitTransform","description","RenderComments","comments","element","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","About","leaders","leader","RenderLeader","leadersLoading","leadersErrMess","tag","left","middle","object","body","heading","designation","title","list","RenderCard","item","Home","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","addFeedback","feedback","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","promossErrMess","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.16e2f78f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = \"http://localhost:3001/\";","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl'\r\n\r\n    function RenderMenuItem({ dish, onClick }) {\r\n        return (\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`}>\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name}/>\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    \r\n    const Menu = (props) => {\r\n            const menu = props.dishes.dishes.map((dish) => {\r\n                return (\r\n                    <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                        <RenderMenuItem dish={dish} />\r\n                    </div>\r\n                );\r\n            });\r\n            if (props.dishes.isLoading) {\r\n                return(\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <Loading />\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else if (props.dishes.errMess) {\r\n                return(\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else{\r\n                return  (\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                                <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                            <div className=\"col-12\">\r\n                                <h3>Menu</h3>\r\n                                <hr/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                                {menu}  \r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport {Navbar, NavbarBrand, Nav, NavbarToggler, NavItem, Collapse, Jumbotron,\r\n        Button, Modal, ModalBody, ModalHeader, FormGroup, Label, Input, Form } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert('Username: ' + this.username.value + \" Password: \" + this.password.value + \" Remeber: \" + this.remember.checked);\r\n        this.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\"/>\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span>&nbsp;Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-lg fa-info\"></span>&nbsp;About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"></span>&nbsp;Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span>&nbsp;Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p> take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader isOpen={this.state.isModalOpen} toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"usesrname\">UserName</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                innerRef={(input) => this.username =input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                innerRef={(input) => this.password =input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember =input} />\r\n                                    Remember Me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleSubmit(values) {\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"#\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"#\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\"> \r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                    placeholder=\"First Name\"  \r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, maxLength: maxLength(30) ,minLength: minLength(2)\r\n                                    }} />\r\n                                    <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".firstname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must Contain Atleast 2 Characters!',\r\n                                        maxLength: 'Must Contain Less Than 30 Charcters!'\r\n                                    }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\"> \r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                    placeholder=\"Last Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, maxLength: maxLength(30) ,minLength: minLength(2)\r\n                                    }} />\r\n                                    <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".lastname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must Contain Atleast 2 Characters!',\r\n                                        maxLength: 'Must Contain Less Than 30 Charcters!'\r\n                                    }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\"> \r\n                                <Label htmlFor=\"telnum\" md={2}>Tel. Number</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Tel. Number\"\r\n                                    validators={{\r\n                                        required, maxLength: maxLength(30), minLength : minLength(2), isNumber\r\n                                    }} />\r\n                                    <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".telnum\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must Contain Atleast 2 numbers!',\r\n                                        maxLength: 'Must Contain Less Than 30 numbers!',\r\n                                        isNumber: 'Must be Number!'\r\n                                    }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\"> \r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    className=\"form-control\" \r\n                                    validators={{\r\n                                        required, validEmail\r\n                                    }} />\r\n                                    <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".email\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        validEmail: 'This Email Address is Invalid!'\r\n                                    }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\"> \r\n                                <Col md={{size: 6, offset:2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\" \r\n                                            className=\"form-check-input\" />{''}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset:1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                    className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\"> \r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                    rows=\"8\"  \r\n                                    className=\"form-control\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\"> \r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );}\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardBody, CardText, CardTitle, Breadcrumb, BreadcrumbItem, \r\n    Button, Modal, ModalBody, ModalHeader, Row, Col, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\n    class CommentForm extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                isModalOpen: false\r\n            };\r\n            this.toggleModal = this.toggleModal.bind(this);\r\n            this.handleComment = this.handleSubmit.bind(this);\r\n        }\r\n\r\n        toggleModal() {\r\n            this.setState({\r\n                isModalOpen: !this.state.isModalOpen\r\n            });\r\n        }\r\n    \r\n        handleSubmit(values) {\r\n            this.toggleModal();\r\n            this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        }\r\n\r\n        render() {\r\n            return(\r\n                <>\r\n                    <Button outline onClick={this.toggleModal}>\r\n                        <span className=\"fa fa-pencil fa-lg\"></span>&nbsp;Submit Comment\r\n                    </Button>\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader isOpen={this.state.isModalOpen} toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                        <ModalBody>\r\n                            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"rating\" md={2}>Rating</Label>\r\n                                    <Col md={12}>\r\n                                        <Control.select model=\".rating\" id=\"rating\" name=\"rating\" \r\n                                        className=\"form-control\">\r\n                                            <option>1</option>\r\n                                            <option>2</option>\r\n                                            <option>3</option>\r\n                                            <option>4</option>\r\n                                            <option>5</option>\r\n                                        </Control.select>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"author\" md={3}>Your Name</Label>\r\n                                    <Col md={12}>\r\n                                        <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Your Name\"\r\n                                        validators={{\r\n                                            minLength: minLength(3) ,maxLength: maxLength(15)\r\n                                        }} />\r\n                                        <Errors \r\n                                            className=\"text-danger\"\r\n                                            model=\".author\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                minLength: 'Must Contain Greater than 2 Characters!',\r\n                                                maxLength: 'Must be 15 Characters or Less!'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"comment\" md={2}>Comment</Label>\r\n                                    <Col md={12}>\r\n                                        <Control.textarea model=\".comment\" id=\"comment\" author=\"comment\" name=\"comment\"\r\n                                        className=\"form-control\" rows=\"6\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                            </LocalForm>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n    \r\n    function RenderDish({dish}) {\r\n        \r\n        if (dish != null) {\r\n            return (\r\n                <FadeTransform in \r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                    <Card>\r\n                        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name}/>\r\n                        <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                                <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    function RenderComments({comments, postComment, dishId}) {\r\n        if(comments != null) {\r\n            return(\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                    <ul className=\"list-unstyled\">\r\n                        <Stagger in>\r\n                            {comments.map((element) => {\r\n                                return(\r\n                                    <Fade in>\r\n                                        <li>\r\n                                            <p>{element.comment}</p>\r\n                                            <p>--{element.author},&nbsp; \r\n                                            {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(element.date)))}\r\n                                            </p>\r\n                                        </li>\r\n                                    </Fade>\r\n                                );\r\n                            })}\r\n                        </Stagger>\r\n                    </ul>\r\n                    <CommentForm dishId={dishId} postComment={postComment} />\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const DishDetail = (props) => {\r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr/>\r\n                        </div>  \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                            <RenderDish dish={props.dish}/>\r\n                        </div>\r\n                        <RenderComments comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id} />\r\n                    </div>\r\n                </div>\r\n            );\r\n            }\r\n    }\r\n\r\nexport default DishDetail;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media, } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Loading } from './LoadingComponent';\nimport { Fade, Stagger } from 'react-animation-components';\n\nfunction About(props) {\n\n    const leaders = props.leaders.map((leader) => {\n        return (\n            <RenderLeader leader={leader}\n            isLoading={props.leadersLoading}\n            errMess={props.leadersErrMess} />\n        );\n    });\n\n    function RenderLeader({leader, isLoading, errMess}) {\n        if (isLoading) {\n        return(\n            <Loading />\n        );\n    }\n    else if (errMess) {\n        return(\n            <h4>{errMess}</h4>\n        );\n    }\n    else {\n            return(\n                <div key={leader.id} className=\"col-12 mt-5\">\n                    <Stagger in>\n                        <Fade in>\n                            <Media tag=\"li\">\n                            <Media left middle>\n                                <Media object src={baseUrl + leader.image} alt={leader.name} />\n                            </Media>\n                            <Media body className=\"ml-5\">\n                                <Media heading>{leader.name}</Media>\n                                <Media heading><small>{leader.designation}</small></Media>\n                                <p className=\"mt-3\">{leader.description}</p>\n                            </Media>\n                            </Media>\n                        </Fade>\n                    </Stagger>\n                </div>\n            );\n        }\n    }\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                        {leaders}\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import React from 'react';\r\nimport {Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return(\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else {\r\n        return(\r\n            <FadeTransform in \r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish}\r\n                    isLoading={props.dishesLoading}\r\n                    errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion}\r\n                    isLoading={props.promosLoading}\r\n                    errMess={props.promosErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}\r\n                    isLoading={props.leadersLoading}\r\n                    errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: {\r\n        comment: comment\r\n    }\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error('Error' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(\r\n            error => {console.log('Post comment', error.message);\r\n            alert('Your comment could not be posted \\n Error: '+ error.message);\r\n    });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error('Error' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n}); \r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response\r\n        }\r\n        else {\r\n            var error = new Error('Error' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response\r\n        }\r\n        else {\r\n            var error = new Error('Error' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n}); \r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response\r\n        }\r\n        else {\r\n            var error = new Error('Error' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n}); \r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message, date) => (dispatch) => {\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message,\r\n        date: date,\r\n    };\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error('Error' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            addFeedback(response);\r\n            alert('Thank You for your feedback!\\n' + JSON.stringify(response));\r\n        })\r\n        .catch(\r\n            error => {console.log('Submit Feedback', error.message);\r\n            alert('Your Feedback could not be submitted \\n Error: '+ error.message);\r\n    });\r\n};\r\n\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';","import React, {Component} from 'react';\r\nimport Menu from './MenuComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport About from './AboutComponent';\r\nimport Home from './HomeComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from \"react-redux-form\";\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders,\r\n  }\r\n}\r\n\r\nconst mapDispatchToPros = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => {dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => {dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message, id) => \r\n  dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message, id))\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n  \r\n  render() {\r\n    const HomePage = () => {\r\n      return(\r\n        <Home \r\n        dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n        dishesLoading={this.props.dishes.isLoading}\r\n        dishesErrMess={this.props.dishes.errMess}\r\n        comment={this.props.comments.comments.filter((comment) => comment.featured)[0]}\r\n        promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n        promosLoading={this.props.promotions.isLoading}\r\n        promossErrMess={this.props.promotions.errMess}\r\n        leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n        leadersLoading={this.props.leaders.isLoading}\r\n        leadersErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n        isLoading={this.props.dishes.isLoading}\r\n        errMess={this.props.dishes.errMess}\r\n        comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n        commentsErrMess={this.props.comments.errMess}\r\n        postComment={this.props.postComment} />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch>\r\n              <Route path=\"/home\" component={HomePage} />\r\n              <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n              <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm}\r\n              postFeedback={this.props.postFeedback} />} />\r\n              <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders.leaders} \r\n              leadersLoading={this.props.leaders.isLoading}\r\n              leadersErrMess={this.props.leaders.errMess}/>} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToPros)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes: []\r\n} , action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload}\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []}\r\n\r\n        default :\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n    errMess: null,\r\n    comments: []\r\n} , action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess: null, comments: action.payload}\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, errMess: action.payload, comments: []}\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            console.log(\"Comment:\",comment);\r\n            return {...state, comments: state.comments.concat(comment)};\r\n        default :\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    promotions: []\r\n} , action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload}\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, promotions: []}\r\n            \r\n        default :\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n} , action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload}\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, leaders: []}\r\n            \r\n        default :\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''    \r\n}\r\n","import React, {Component} from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport Main from './components/MainComponent';\r\nimport { ConfigureStore } from './redux/configureStore';\r\nimport './App.css';\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <div>\r\n            <Main />\r\n          </div>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}